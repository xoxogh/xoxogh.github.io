PVector location1;  // Location of first ball
PVector velocity1;  // Velocity of first ball
PVector gravity1;   // Gravity of first ball

PVector location2;  // Location of second ball
PVector velocity2;  // Velocity of second ball
PVector gravity2;   // Gravity of second ball

void setup() {
  size(640,360);
  
  // Set initial values for first ball
  location1 = new PVector(100,100);
  velocity1 = new PVector(1.5,2.1);
  gravity1 = new PVector(0,0.2);

  // Set initial values for second ball
  location2 = new PVector(200,200);
  velocity2 = new PVector(-2,1);
  gravity2 = new PVector(0,0.1);
}

void draw() {
  background(0);
  
  // Update first ball's location, velocity, and gravity
  location1.add(velocity1);
  velocity1.add(gravity1);
  
  // Update second ball's location, velocity, and gravity
  location2.add(velocity2);
  velocity2.add(gravity2);

  // Bounce off edges for first ball
  if ((location1.x > width) || (location1.x < 0)) {
    velocity1.x = velocity1.x * -1;
  }
  
  if (location1.y > height) {
    velocity1.y = velocity1.y * -0.95; 
    location1.y = height;
  }

  // Bounce off edges for second ball
  if ((location2.x > width) || (location2.x < 0)) {
    velocity2.x = velocity2.x * -1;
  }
  
  if (location2.y > height) {
    velocity2.y = velocity2.y * -0.95; 
    location2.y = height;
  }

  // Display first ball as circle
  stroke(255);
  strokeWeight(2);
  fill(127);
  ellipse(location1.x,location1.y,48,48);
  
  // Display second ball as ellipse
  stroke(255);
  strokeWeight(2);
  fill(200, 100, 50);
  ellipse(location2.x,location2.y,24,24);
}
